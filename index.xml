<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>zrx的外置记忆模块</title><link>https://www.monellz.xyz/</link><description>Recent content on zrx的外置记忆模块</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Mon, 23 Nov 2020 15:23:45 +0800</lastBuildDate><atom:link href="https://www.monellz.xyz/index.xml" rel="self" type="application/rss+xml"/><item><title>hugo博客中添加google analytics</title><link>https://www.monellz.xyz/2020/11/23/blog-analytics/</link><pubDate>Mon, 23 Nov 2020 15:23:45 +0800</pubDate><guid>https://www.monellz.xyz/2020/11/23/blog-analytics/</guid><description>想在这个博客中添加一下流量统计就整了下google analytics
hugo在官网里说了已经内部支持google analytics，只需要在config文件里指定ID并在head里添加就行here
但看起来似乎是hugo没有跟上google analytics的发展，我在捣鼓analytics的时候一直找不到UA-XXXX-X这样的tracking id，只有G-XXXXX这样的ID，我尝试了把官网教程中的UA-XXXX替换成G-XXXX，但并没有什么用
查看一下hugo内部的analytics模版，发现它跟google analytics给的代码模版不一致，那我就只能手动hard code了
把themes/minos/layouts/partials/footer.html中的调用hugo内部analytics模版删掉
{{ template &amp;#34;_internal/google_analytics_async.html&amp;#34; . }} # 删掉 然后写入google analytics推荐的code</description></item><item><title>DaCe(SC19)分析-2 DaceProgram初始化</title><link>https://www.monellz.xyz/2020/11/23/dace-2/</link><pubDate>Mon, 23 Nov 2020 12:10:37 +0800</pubDate><guid>https://www.monellz.xyz/2020/11/23/dace-2/</guid><description>上次说到，dace采用装饰器来修饰需要被优化的函数，最终会返回一个parser.DaceProgram(f, args, kwargs)，其中f是被修饰函数的指针，args是可选的装饰器参数，指定函数的参数类型
DaceProgram被定义在了dace/frontend/python/parser.py里，其初始化函数如下
class DaceProgram: &amp;#34;&amp;#34;&amp;#34; A data-centric program object, obtained by decorating a function with `@dace.</description></item><item><title>DaCe(SC19)分析-3 编译和生成</title><link>https://www.monellz.xyz/2020/11/24/dace-3/</link><pubDate>Mon, 23 Nov 2020 12:10:37 +0800</pubDate><guid>https://www.monellz.xyz/2020/11/24/dace-3/</guid><description>继续之前的DaceProgram
DaceProgram重写了自己的__call__，因此被dace装饰的函数，将会在被调用时进行编译和运行
def __call__(self, *args, **kwargs): &amp;#34;&amp;#34;&amp;#34; Convenience function that parses, compiles, and runs a DaCe program.</description></item><item><title>DaCe(SC19)分析-1 入口</title><link>https://www.monellz.xyz/2020/11/19/dace-1/</link><pubDate>Thu, 19 Nov 2020 10:09:38 +0800</pubDate><guid>https://www.monellz.xyz/2020/11/19/dace-1/</guid><description>开一个新坑，对SC19的异构编程框架文章dace分析源码，顺便看一下现代python的写法以及与后端c++的协同方式
从dace的tutorial例子出发
import dace @dace.program def getstarted(A): return A + A 啪就来个装饰器，很快啊（
首先在dace/__init__.py下，所有装饰被导出
from .frontend.python.decorators import * 继续往里走就是dace/frontend/python/decorators.</description></item><item><title>bash脚本中传递带引号的参数</title><link>https://www.monellz.xyz/2020/08/10/bash_pass_args/</link><pubDate>Mon, 10 Aug 2020 10:46:03 +0800</pubDate><guid>https://www.monellz.xyz/2020/08/10/bash_pass_args/</guid><description>用bash来执行其他文件时，若直接使用$*来传递参数，则会导致其中的双引号被去掉，应使用&amp;quot;$@&amp;quot;来传递参数</description></item></channel></rss>